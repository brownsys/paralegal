// for-each

let cause_builder = CauseBuilder::new("{{span}}", "{{clause_num}}");
{{#if refers-to-definition}}
    {{#if node-cluster}}
        let Some(ref {{{var}}}) = {{{var}}}.clone() else { return (true, cause_builder.with_type(CauseTy::empty_quantifier(Connective::Or))); };
    {{/if}}
{{else}}
    {{#if node-cluster}}
        {{intro}});
        let Some(ref {{{var}}}) = {{{var}}} else { return (true, cause_builder.with_type(CauseTy::empty_quantifier(Connective::Or))); };
    {{else}}
        let mut {{{var}}} = {{{intro}}};
    {{/if}}
{{/if}}

{{#if node-cluster}}
{{{body}}}
{{else}}
    cause_builder
        .all({{{var}}}.into_iter(), |{{{var}}}| {
            {{{body}}}
        })
{{/if}}