searchState.loadedDescShard("pretty", 0, "This crate defines a Wadler-style pretty-printing API.\nAn arena which can be used to allocate <code>Doc</code> values.\nEither a <code>Doc</code> or a pointer to a <code>Doc</code> (<code>D</code>)\nThe concrete document type. This type is not meant to be …\nThe <code>DocAllocator</code> trait abstracts over a type which can …\nThe <code>DocBuilder</code> type allows for convenient appending of …\nWrites to something implementing <code>std::fmt::Write</code>\nWrites to something implementing <code>std::io::Write</code>\nTrait for types which can be converted to a <code>Document</code>\nNewtype wrapper for <code>&amp;Doc</code>\nTrait representing the operations necessary to render a …\nTrait representing the operations necessary to write an …\nLays out <code>self</code> so with the nesting level set to the current …\nAppend the given document after this document.\nAppend the given document after this document.\nAppend the given document after this document.\nAllocate a document containing the text <code>t.to_string()</code>.\nThe text <code>t.to_string()</code>.\nThe text <code>t.to_string()</code>.\nThe text <code>t.to_string()</code>.\nThe text <code>t.to_string()</code>.\nDocument formatting of “blocks” such as where some …\nAllocate a document that acts differently based on the …\nAllocate a document concatenating the given documents.\nA single document concatenating all the given documents.\nA single document concatenating all the given documents.\nConcatenates a number of documents (or values that can be …\nPuts <code>self</code> between <code>before</code> and <code>after</code>\nFails document rendering immediately.\nActs as <code>self</code> when laid out on multiple lines and acts as …\nActs as <code>self</code> when laid out on multiple lines and acts as …\nActs as <code>self</code> when laid out on multiple lines and acts as …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMark this document as a group.\nMark this document as a group.\nMark this document as a group.\nLays out <code>self</code> with a nesting level set to the current …\nAllocate a single hardline.\nA single hardline.\nA single hardline.\nA single hardline.\nA single hardline.\nIndents <code>self</code> by <code>adjust</code> spaces from the current cursor …\nAllocate a document that intersperses the given separator <code>S</code>…\nA single document interspersing the given separator <code>S</code> …\nA single document interspersing the given separator <code>S</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA line acts like a <code>\\n</code> but behaves like <code>space</code> if it is …\nA line acts like a <code>\\n</code> but behaves like <code>space</code> if it is …\nA line acts like a <code>\\n</code> but behaves like <code>space</code> if it is …\nA line acts like a <code>\\n</code> but behaves like <code>space</code> if it is …\nA line acts like a <code>\\n</code> but behaves like <code>space</code> if it is …\nActs like <code>line</code> but behaves like <code>nil</code> if grouped on a single …\nActs like <code>line</code> but behaves like <code>nil</code> if grouped on a single …\nActs like <code>line</code> but behaves like <code>nil</code> if grouped on a single …\nActs like <code>line</code> but behaves like <code>nil</code> if grouped on a single …\nActs like <code>line</code> but behaves like <code>nil</code> if grouped on a single …\nIncrease the indentation level of this document.\nIncrease the indentation level of this document.\nIncrease the indentation level of this document.\nAllocate a document that acts differently based on the …\nAllocate an empty document.\nAn empty document.\nAn empty document.\nAn empty document.\nAn empty document.\nConverts <code>self</code> into a document\nReturns a value which implements <code>std::fmt::Display</code>\nReflows <code>text</code> inserting <code>softline</code> in place of any whitespace\nWrites a rendered document to a <code>std::io::Write</code> object.\nWrites a rendered document to a <code>std::fmt::Write</code> object.\nWrites a rendered document to a <code>RenderAnnotated&lt;A&gt;</code> object.\nA <code>softline</code> acts like <code>space</code> if the document fits the page, …\nA <code>softline_</code> acts like <code>nil</code> if the document fits the page, …\nA <code>softline_</code> acts like <code>nil</code> if the document fits the page, …\nA <code>softline_</code> acts like <code>nil</code> if the document fits the page, …\nAllocate a document containing the given text.\nThe given text, which must not contain line breaks.\nThe given text, which must not contain line breaks.\nThe given text, which must not contain line breaks.\nThe given text, which must not contain line breaks.\nLays out <code>self</code> and provides the column width of it …\nFormats a set of <code>prefix</code> and <code>suffix</code> documents around a <code>body</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")