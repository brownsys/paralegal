(function() {
    var type_impls = Object.fromEntries([["pretty",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#46-47\">Source</a><a href=\"#impl-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#62\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrayvec/array_string/struct.ArrayString.html#tymethod.new\" class=\"fn\">new</a>() -&gt; <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new empty <code>ArrayString</code>.</p>\n<p>Capacity is inferred from the type parameter.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>arrayvec::ArrayString;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>string = ArrayString::&lt;[<span class=\"kw\">_</span>; <span class=\"number\">16</span>]&gt;::new();\nstring.push_str(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>string[..], <span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(string.capacity(), <span class=\"number\">16</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#83\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrayvec/array_string/struct.ArrayString.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the length of the string.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#87\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrayvec/array_string/struct.ArrayString.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns whether the string is empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#103\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrayvec/array_string/struct.ArrayString.html#tymethod.from\" class=\"fn\">from</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;, <a class=\"struct\" href=\"arrayvec/errors/struct.CapacityError.html\" title=\"struct arrayvec::errors::CapacityError\">CapacityError</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new <code>ArrayString</code> from a <code>str</code>.</p>\n<p>Capacity is inferred from the type parameter.</p>\n<p><strong>Errors</strong> if the backing array is not large enough to fit the string.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>arrayvec::ArrayString;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>string = ArrayString::&lt;[<span class=\"kw\">_</span>; <span class=\"number\">3</span>]&gt;::from(<span class=\"string\">\"foo\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>string[..], <span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">assert_eq!</span>(string.len(), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(string.capacity(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_byte_string\" class=\"method\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#118\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrayvec/array_string/struct.ArrayString.html#tymethod.from_byte_string\" class=\"fn\">from_byte_string</a>(b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;A</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/str/error/struct.Utf8Error.html\" title=\"struct core::str::error::Utf8Error\">Utf8Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new <code>ArrayString</code> from a byte string literal.</p>\n<p><strong>Errors</strong> if the byte string literal is not valid UTF-8.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>arrayvec::ArrayString;\n\n<span class=\"kw\">let </span>string = ArrayString::from_byte_string(<span class=\"string\">b\"hello world\"</span>).unwrap();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#136\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrayvec/array_string/struct.ArrayString.html#tymethod.capacity\" class=\"fn\">capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the capacity of the <code>ArrayString</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>arrayvec::ArrayString;\n\n<span class=\"kw\">let </span>string = ArrayString::&lt;[<span class=\"kw\">_</span>; <span class=\"number\">3</span>]&gt;::new();\n<span class=\"macro\">assert_eq!</span>(string.capacity(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_full\" class=\"method\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#148\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrayvec/array_string/struct.ArrayString.html#tymethod.is_full\" class=\"fn\">is_full</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return if the <code>ArrayString</code> is completely filled.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>arrayvec::ArrayString;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>string = ArrayString::&lt;[<span class=\"kw\">_</span>; <span class=\"number\">1</span>]&gt;::new();\n<span class=\"macro\">assert!</span>(!string.is_full());\nstring.push_str(<span class=\"string\">\"A\"</span>);\n<span class=\"macro\">assert!</span>(string.is_full());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#164\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrayvec/array_string/struct.ArrayString.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>)</h4></section></summary><div class=\"docblock\"><p>Adds the given char to the end of the string.</p>\n<p><em><strong>Panics</strong></em> if the backing array is not large enough to fit the additional char.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>arrayvec::ArrayString;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>string = ArrayString::&lt;[<span class=\"kw\">_</span>; <span class=\"number\">2</span>]&gt;::new();\n\nstring.push(<span class=\"string\">'a'</span>);\nstring.push(<span class=\"string\">'b'</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>string[..], <span class=\"string\">\"ab\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_push\" class=\"method\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#186\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrayvec/array_string/struct.ArrayString.html#tymethod.try_push\" class=\"fn\">try_push</a>(&amp;mut self, c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"arrayvec/errors/struct.CapacityError.html\" title=\"struct arrayvec::errors::CapacityError\">CapacityError</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Adds the given char to the end of the string.</p>\n<p>Returns <code>Ok</code> if the push succeeds.</p>\n<p><strong>Errors</strong> if the backing array is not large enough to fit the additional char.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>arrayvec::ArrayString;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>string = ArrayString::&lt;[<span class=\"kw\">_</span>; <span class=\"number\">2</span>]&gt;::new();\n\nstring.try_push(<span class=\"string\">'a'</span>).unwrap();\nstring.try_push(<span class=\"string\">'b'</span>).unwrap();\n<span class=\"kw\">let </span>overflow = string.try_push(<span class=\"string\">'c'</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>string[..], <span class=\"string\">\"ab\"</span>);\n<span class=\"macro\">assert_eq!</span>(overflow.unwrap_err().element(), <span class=\"string\">'c'</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push_str\" class=\"method\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#215\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrayvec/array_string/struct.ArrayString.html#tymethod.push_str\" class=\"fn\">push_str</a>(&amp;mut self, s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>)</h4></section></summary><div class=\"docblock\"><p>Adds the given string slice to the end of the string.</p>\n<p><em><strong>Panics</strong></em> if the backing array is not large enough to fit the string.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>arrayvec::ArrayString;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>string = ArrayString::&lt;[<span class=\"kw\">_</span>; <span class=\"number\">2</span>]&gt;::new();\n\nstring.push_str(<span class=\"string\">\"a\"</span>);\nstring.push_str(<span class=\"string\">\"d\"</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>string[..], <span class=\"string\">\"ad\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_push_str\" class=\"method\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#239\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrayvec/array_string/struct.ArrayString.html#tymethod.try_push_str\" class=\"fn\">try_push_str</a>&lt;'a&gt;(\n    &amp;mut self,\n    s: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"arrayvec/errors/struct.CapacityError.html\" title=\"struct arrayvec::errors::CapacityError\">CapacityError</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Adds the given string slice to the end of the string.</p>\n<p>Returns <code>Ok</code> if the push succeeds.</p>\n<p><strong>Errors</strong> if the backing array is not large enough to fit the string.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>arrayvec::ArrayString;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>string = ArrayString::&lt;[<span class=\"kw\">_</span>; <span class=\"number\">2</span>]&gt;::new();\n\nstring.try_push_str(<span class=\"string\">\"a\"</span>).unwrap();\n<span class=\"kw\">let </span>overflow1 = string.try_push_str(<span class=\"string\">\"bc\"</span>);\nstring.try_push_str(<span class=\"string\">\"d\"</span>).unwrap();\n<span class=\"kw\">let </span>overflow2 = string.try_push_str(<span class=\"string\">\"ef\"</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>string[..], <span class=\"string\">\"ad\"</span>);\n<span class=\"macro\">assert_eq!</span>(overflow1.unwrap_err().element(), <span class=\"string\">\"bc\"</span>);\n<span class=\"macro\">assert_eq!</span>(overflow2.unwrap_err().element(), <span class=\"string\">\"ef\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#268\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrayvec/array_string/struct.ArrayString.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Removes the last character from the string and returns it.</p>\n<p>Returns <code>None</code> if this <code>ArrayString</code> is empty.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>arrayvec::ArrayString;\n \n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>s = ArrayString::&lt;[<span class=\"kw\">_</span>; <span class=\"number\">3</span>]&gt;::from(<span class=\"string\">\"foo\"</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(s.pop(), <span class=\"prelude-val\">Some</span>(<span class=\"string\">'o'</span>));\n<span class=\"macro\">assert_eq!</span>(s.pop(), <span class=\"prelude-val\">Some</span>(<span class=\"string\">'o'</span>));\n<span class=\"macro\">assert_eq!</span>(s.pop(), <span class=\"prelude-val\">Some</span>(<span class=\"string\">'f'</span>));\n\n<span class=\"macro\">assert_eq!</span>(s.pop(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.truncate\" class=\"method\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#296\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrayvec/array_string/struct.ArrayString.html#tymethod.truncate\" class=\"fn\">truncate</a>(&amp;mut self, new_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shortens this <code>ArrayString</code> to the specified length.</p>\n<p>If <code>new_len</code> is greater than the stringโs current length, this has no\neffect.</p>\n<p><em><strong>Panics</strong></em> if <code>new_len</code> does not lie on a <code>char</code> boundary.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>arrayvec::ArrayString;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>string = ArrayString::&lt;[<span class=\"kw\">_</span>; <span class=\"number\">6</span>]&gt;::from(<span class=\"string\">\"foobar\"</span>).unwrap();\nstring.truncate(<span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>string[..], <span class=\"string\">\"foo\"</span>);\nstring.truncate(<span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>string[..], <span class=\"string\">\"foo\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#326\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrayvec/array_string/struct.ArrayString.html#tymethod.remove\" class=\"fn\">remove</a>(&amp;mut self, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a></h4></section></summary><div class=\"docblock\"><p>Removes a <code>char</code> from this <code>ArrayString</code> at a byte position and returns it.</p>\n<p>This is an <code>O(n)</code> operation, as it requires copying every element in the\narray.</p>\n<p><em><strong>Panics</strong></em> if <code>idx</code> is larger than or equal to the <code>ArrayString</code>โs length,\nor if it does not lie on a <code>char</code> boundary.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>arrayvec::ArrayString;\n \n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>s = ArrayString::&lt;[<span class=\"kw\">_</span>; <span class=\"number\">3</span>]&gt;::from(<span class=\"string\">\"foo\"</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(s.remove(<span class=\"number\">0</span>), <span class=\"string\">'f'</span>);\n<span class=\"macro\">assert_eq!</span>(s.remove(<span class=\"number\">1</span>), <span class=\"string\">'o'</span>);\n<span class=\"macro\">assert_eq!</span>(s.remove(<span class=\"number\">0</span>), <span class=\"string\">'o'</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#344\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrayvec/array_string/struct.ArrayString.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Make the string empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_len\" class=\"method\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#357\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"arrayvec/array_string/struct.ArrayString.html#tymethod.set_len\" class=\"fn\">set_len</a>(&amp;mut self, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Set the stringsโs length.</p>\n<p>This function is <code>unsafe</code> because it changes the notion of the\nnumber of โvalidโ bytes in the string. Use with care.</p>\n<p>This method uses <em>debug assertions</em> to check the validity of <code>length</code>\nand may use other debug assertions.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_str\" class=\"method\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#363\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrayvec/array_string/struct.ArrayString.html#tymethod.as_str\" class=\"fn\">as_str</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class=\"docblock\"><p>Return a string slice of the whole <code>ArrayString</code>.</p>\n</div></details></div></details>",0,"pretty::SmallText"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3Cstr%3E-for-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#435-436\">Source</a><a href=\"#impl-AsRef%3Cstr%3E-for-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#438\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<str>","pretty::SmallText"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3Cstr%3E-for-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#429-430\">Source</a><a href=\"#impl-Borrow%3Cstr%3E-for-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#432\">Source</a><a href=\"#method.borrow\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<str>","pretty::SmallText"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#466-467\">Source</a><a href=\"#impl-Clone-for-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#469\">Source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#472\">Source</a><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","pretty::SmallText"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#441-442\">Source</a><a href=\"#impl-Debug-for-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#444\">Source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","pretty::SmallText"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#37-38\">Source</a><a href=\"#impl-Default-for-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#41\">Source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;</h4></section></summary><div class=\"docblock\"><p>Return an empty <code>ArrayString</code></p>\n</div></details></div></details>","Default","pretty::SmallText"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#368-369\">Source</a><a href=\"#impl-Deref-for-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#371\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#373\">Source</a><a href=\"#method.deref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","pretty::SmallText"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#381-382\">Source</a><a href=\"#impl-DerefMut-for-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#385\">Source</a><a href=\"#method.deref_mut\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","pretty::SmallText"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#447-448\">Source</a><a href=\"#impl-Display-for-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#450\">Source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","pretty::SmallText"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#523-524\">Source</a><a href=\"#impl-FromStr-for-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#526\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"arrayvec/errors/struct.CapacityError.html\" title=\"struct arrayvec::errors::CapacityError\">CapacityError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#528\">Source</a><a href=\"#method.from_str\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;, &lt;<a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","pretty::SmallText"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#421-422\">Source</a><a href=\"#impl-Hash-for-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#424\">Source</a><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, h: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","pretty::SmallText"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#515-516\">Source</a><a href=\"#impl-Ord-for-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#518\">Source</a><a href=\"#method.cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#980-982\">Source</a></span><a href=\"#method.max\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1001-1003\">Source</a></span><a href=\"#method.min\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1027-1029\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","pretty::SmallText"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Cstr%3E-for-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#401-402\">Source</a><a href=\"#impl-PartialEq%3Cstr%3E-for-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#404\">Source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<str>","pretty::SmallText"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#393-394\">Source</a><a href=\"#impl-PartialEq-for-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#396\">Source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","pretty::SmallText"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#491-492\">Source</a><a href=\"#impl-PartialOrd%3Cstr%3E-for-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#494\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#497\">Source</a><a href=\"#method.lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#498\">Source</a><a href=\"#method.le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#499\">Source</a><a href=\"#method.gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#500\">Source</a><a href=\"#method.ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<str>","pretty::SmallText"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#479-480\">Source</a><a href=\"#impl-PartialOrd-for-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#482\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#485\">Source</a><a href=\"#method.lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#486\">Source</a><a href=\"#method.le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#487\">Source</a><a href=\"#method.gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#488\">Source</a><a href=\"#method.ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","pretty::SmallText"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Write-for-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#454-455\">Source</a><a href=\"#impl-Write-for-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a> for <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3><div class=\"docblock\"><p><code>Write</code> appends written data to the end of the string.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_char\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#457\">Source</a><a href=\"#method.write_char\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Write.html#method.write_char\" class=\"fn\">write_char</a>(&amp;mut self, c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a <a href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\" title=\"primitive char\"><code>char</code></a> into this writer, returning whether the write succeeded. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Write.html#method.write_char\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#461\">Source</a><a href=\"#method.write_str\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Write.html#tymethod.write_str\" class=\"fn\">write_str</a>(&amp;mut self, s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a string slice into this writer, returning whether the write\nsucceeded. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Write.html#tymethod.write_str\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_fmt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/mod.rs.html#215\">Source</a></span><a href=\"#method.write_fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Write.html#method.write_fmt\" class=\"fn\">write_fmt</a>(&amp;mut self, args: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Arguments.html\" title=\"struct core::fmt::Arguments\">Arguments</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Glue for usage of the <a href=\"https://doc.rust-lang.org/nightly/core/macro.write.html\" title=\"macro core::write\"><code>write!</code></a> macro with implementors of this trait. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Write.html#method.write_fmt\">Read more</a></div></details></div></details>","Write","pretty::SmallText"],["<section id=\"impl-Copy-for-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#29\">Source</a><a href=\"#impl-Copy-for-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    &lt;A as <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&gt;::<a class=\"associatedtype\" href=\"arrayvec/array/trait.Array.html#associatedtype.Index\" title=\"type arrayvec::array::Array::Index\">Index</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","pretty::SmallText"],["<section id=\"impl-Eq-for-ArrayString%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrayvec/array_string.rs.html#417-418\">Source</a><a href=\"#impl-Eq-for-ArrayString%3CA%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"arrayvec/array_string/struct.ArrayString.html\" title=\"struct arrayvec::array_string::ArrayString\">ArrayString</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"arrayvec/array/trait.Array.html\" title=\"trait arrayvec::array::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Eq","pretty::SmallText"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[75707]}