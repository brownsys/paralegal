searchState.loadedDescShard("cargo_credential", 0, "Helper library for writing Cargo credential providers.\nMessage sent by the credential helper on startup\nMessage sent by Cargo to the credential helper after the …\nMessage sent by the credential helper\nCredential provider error type.\nCache this result and use it for subsequent requests in …\nDo not cache this result.\nCredentials could not be found. Cargo will try another …\nA record of what kind of operation is happening that we …\nThe provider doesn’t support this operation, such as a …\nThe provider failed to perform the operation. Other …\nThe user is attempting to modify the owners of a crate.\nCredential process JSON protocol version.\nThe user is attempting to publish a crate.\nThe user is attempting to fetch a crate.\nA wrapper for values that should not be printed.\nCache this result and use it for all subsequent requests …\nA new variant was added to this enum since Cargo was built\nCredential provider that doesn’t support any registries.\nThe user is attempting to unyank a crate.\nRegistry URL is not supported. This should be used if the …\nThe user is attempting to yank a crate.\nAdditional command-line arguments passed to the credential …\nDeserialize a request from Cargo.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHeaders from attempting to access a registry that resulted …\nRegistry index url\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOptional URL that the user can visit to log in to the …\nRuns the credential interaction\nName of the registry in configuration. May not be …\nRetrieves a token for the given registry.\nRead a line of text from stdin.\nPrompt the user for a token.\nToken passed on the command line via –token or from stdin\nThe checksum of the crate file being uploaded\nThe name of the crate\nThe name of the crate\nThe name of the crate\nThe name of the crate\nThe version of the crate\nThe version of the crate\nThe version of the crate\nCredential provider error type.\nCredentials could not be found. Cargo will try another …\nThe provider doesn’t support this operation, such as a …\nThe provider failed to perform the operation. Other …\nString-based error type with an optional source\nA new variant was added to this enum since Cargo was built\nRegistry URL is not supported. This should be used if the …\nSerializer / deserializer for any boxed error. The string …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA wrapper for values that should not be printed.\nConverts a <code>Secret&lt;T&gt;</code> to a <code>Secret&lt;&amp;T::Target&gt;</code>.\nConverts a <code>Secret&lt;T&gt;</code> to a <code>Secret&lt;&amp;T&gt;</code>.\nUnwraps the contained value.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nChecks if the contained value is empty.\nConverts a <code>Secret&lt;T&gt;</code> to a <code>Secret&lt;U&gt;</code> by applying <code>f</code> to the …\nConverts a <code>Secret</code> containing a borrowed type to a <code>Secret</code> …\nConverts a <code>Secret&lt;Result&lt;T, E&gt;&gt;</code> to a <code>Result&lt;Secret&lt;T&gt;, E&gt;</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReset stdin and stdout to the attached console / tty for …\nRestores previous stdio when dropped.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")