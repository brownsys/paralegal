searchState.loadedDescShard("crates_io", 0, "This crate is maintained by the Cargo team for use by the …\nError from API response containing JSON field …\nError from API response which didn’t have pre-programmed …\nError from libcurl.\nContains the error value\nError returned when interacting with a registry.\nReason why the token was invalid.\nError from IO. Mostly from reading the tarball to upload.\nError from seriailzing the request payload and …\nThis struct is serialized as JSON and sent as metadata …\nContains the success value\nServer was unavailable and timeouted. Happened when …\nResponse body was not valid utf8.\nWhether to include the authorization token with all …\nChecks if a token is valid or malformed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCurl handle for issuing requests.\nThe base URL for issuing API requests.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the host of the given URL is “crates.io…\nCreates a new <code>Registry</code>.\nOptional authorization token. If None, commands requiring …")