(function() {
    var type_impls = Object.fromEntries([["miri",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Tree\" class=\"impl\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#206\">Source</a><a href=\"#impl-Clone-for-Tree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html\" title=\"struct miri::borrow_tracker::tree_borrows::tree::Tree\">Tree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#206\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html\" title=\"struct miri::borrow_tracker::tree_borrows::tree::Tree\">Tree</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","miri::borrow_tracker::tree_borrows::AllocState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Tree\" class=\"impl\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#206\">Source</a><a href=\"#impl-Debug-for-Tree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html\" title=\"struct miri::borrow_tracker::tree_borrows::tree::Tree\">Tree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#206\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","miri::borrow_tracker::tree_borrows::AllocState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tree\" class=\"impl\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/diagnostics.rs.html#201-236\">Source</a><a href=\"#impl-Tree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"struct\" href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html\" title=\"struct miri::borrow_tracker::tree_borrows::tree::Tree\">Tree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_parent\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/diagnostics.rs.html#206-213\">Source</a><h4 class=\"code-header\">fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.nth_parent\" class=\"fn\">nth_parent</a>(&amp;self, tag: <a class=\"struct\" href=\"miri/borrow_tracker/struct.BorTag.html\" title=\"struct miri::borrow_tracker::BorTag\">BorTag</a>, nth_parent: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"miri/borrow_tracker/struct.BorTag.html\" title=\"struct miri::borrow_tracker::BorTag\">BorTag</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Climb the tree to get the tag of a distant ancestor.\nAllows operations on tags that are unreachable by the program\nbut still exist in the tree. Not guaranteed to perform consistently\nif <code>provenance-gc=1</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.give_pointer_debug_name\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/diagnostics.rs.html#216-230\">Source</a><h4 class=\"code-header\">pub fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.give_pointer_debug_name\" class=\"fn\">give_pointer_debug_name</a>(\n    &amp;mut self,\n    tag: <a class=\"struct\" href=\"miri/borrow_tracker/struct.BorTag.html\" title=\"struct miri::borrow_tracker::BorTag\">BorTag</a>,\n    nth_parent: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"type\" href=\"rustc_middle/mir/interpret/error/type.InterpResult.html\" title=\"type rustc_middle::mir::interpret::error::InterpResult\">InterpResult</a>&lt;'tcx&gt;</h4></section></summary><div class=\"docblock\"><p>Debug helper: assign name to tag.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_allocation_of\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/diagnostics.rs.html#233-235\">Source</a><h4 class=\"code-header\">pub fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.is_allocation_of\" class=\"fn\">is_allocation_of</a>(&amp;self, tag: <a class=\"struct\" href=\"miri/borrow_tracker/struct.BorTag.html\" title=\"struct miri::borrow_tracker::BorTag\">BorTag</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Debug helper: determines if the tree contains a tag.</p>\n</div></details></div></details>",0,"miri::borrow_tracker::tree_borrows::AllocState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tree\" class=\"impl\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/diagnostics.rs.html#783-803\">Source</a><a href=\"#impl-Tree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"struct\" href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html\" title=\"struct miri::borrow_tracker::tree_borrows::tree::Tree\">Tree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.print_tree\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/diagnostics.rs.html#785-802\">Source</a><h4 class=\"code-header\">pub fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.print_tree\" class=\"fn\">print_tree</a>(\n    &amp;self,\n    protected_tags: &amp;FxHashMap&lt;<a class=\"struct\" href=\"miri/borrow_tracker/struct.BorTag.html\" title=\"struct miri::borrow_tracker::BorTag\">BorTag</a>, <a class=\"enum\" href=\"miri/borrow_tracker/enum.ProtectorKind.html\" title=\"enum miri::borrow_tracker::ProtectorKind\">ProtectorKind</a>&gt;,\n    show_unnamed: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"type\" href=\"rustc_middle/mir/interpret/error/type.InterpResult.html\" title=\"type rustc_middle::mir::interpret::error::InterpResult\">InterpResult</a>&lt;'tcx&gt;</h4></section></summary><div class=\"docblock\"><p>Display the contents of the tree.</p>\n</div></details></div></details>",0,"miri::borrow_tracker::tree_borrows::AllocState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tree\" class=\"impl\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/mod.rs.html#25-113\">Source</a><a href=\"#impl-Tree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"struct\" href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html\" title=\"struct miri::borrow_tracker::tree_borrows::tree::Tree\">Tree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_allocation\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/mod.rs.html#27-37\">Source</a><h4 class=\"code-header\">pub fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.new_allocation\" class=\"fn\">new_allocation</a>(\n    id: <a class=\"struct\" href=\"rustc_middle/mir/interpret/struct.AllocId.html\" title=\"struct rustc_middle::mir::interpret::AllocId\">AllocId</a>,\n    size: <a class=\"struct\" href=\"rustc_abi/struct.Size.html\" title=\"struct rustc_abi::Size\">Size</a>,\n    state: &amp;mut <a class=\"struct\" href=\"miri/borrow_tracker/struct.GlobalStateInner.html\" title=\"struct miri::borrow_tracker::GlobalStateInner\">GlobalStateInner</a>,\n    _kind: <a class=\"type\" href=\"miri/machine/type.MemoryKind.html\" title=\"type miri::machine::MemoryKind\">MemoryKind</a>,\n    machine: &amp;<a class=\"struct\" href=\"miri/machine/struct.MiriMachine.html\" title=\"struct miri::machine::MiriMachine\">MiriMachine</a>&lt;'tcx&gt;,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new allocation, i.e. a new tree</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_memory_access\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/mod.rs.html#41-71\">Source</a><h4 class=\"code-header\">pub fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.before_memory_access\" class=\"fn\">before_memory_access</a>(\n    &amp;mut self,\n    access_kind: <a class=\"enum\" href=\"miri/helpers/enum.AccessKind.html\" title=\"enum miri::helpers::AccessKind\">AccessKind</a>,\n    alloc_id: <a class=\"struct\" href=\"rustc_middle/mir/interpret/struct.AllocId.html\" title=\"struct rustc_middle::mir::interpret::AllocId\">AllocId</a>,\n    prov: <a class=\"enum\" href=\"miri/machine/enum.ProvenanceExtra.html\" title=\"enum miri::machine::ProvenanceExtra\">ProvenanceExtra</a>,\n    range: <a class=\"struct\" href=\"rustc_middle/mir/interpret/allocation/struct.AllocRange.html\" title=\"struct rustc_middle::mir::interpret::allocation::AllocRange\">AllocRange</a>,\n    machine: &amp;<a class=\"struct\" href=\"miri/machine/struct.MiriMachine.html\" title=\"struct miri::machine::MiriMachine\">MiriMachine</a>&lt;'tcx&gt;,\n) -&gt; <a class=\"type\" href=\"rustc_middle/mir/interpret/error/type.InterpResult.html\" title=\"type rustc_middle::mir::interpret::error::InterpResult\">InterpResult</a>&lt;'tcx&gt;</h4></section></summary><div class=\"docblock\"><p>Check that an access on the entire range is permitted, and update\nthe tree.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_memory_deallocation\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/mod.rs.html#74-90\">Source</a><h4 class=\"code-header\">pub fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.before_memory_deallocation\" class=\"fn\">before_memory_deallocation</a>(\n    &amp;mut self,\n    alloc_id: <a class=\"struct\" href=\"rustc_middle/mir/interpret/struct.AllocId.html\" title=\"struct rustc_middle::mir::interpret::AllocId\">AllocId</a>,\n    prov: <a class=\"enum\" href=\"miri/machine/enum.ProvenanceExtra.html\" title=\"enum miri::machine::ProvenanceExtra\">ProvenanceExtra</a>,\n    size: <a class=\"struct\" href=\"rustc_abi/struct.Size.html\" title=\"struct rustc_abi::Size\">Size</a>,\n    machine: &amp;<a class=\"struct\" href=\"miri/machine/struct.MiriMachine.html\" title=\"struct miri::machine::MiriMachine\">MiriMachine</a>&lt;'tcx&gt;,\n) -&gt; <a class=\"type\" href=\"rustc_middle/mir/interpret/error/type.InterpResult.html\" title=\"type rustc_middle::mir::interpret::error::InterpResult\">InterpResult</a>&lt;'tcx&gt;</h4></section></summary><div class=\"docblock\"><p>Check that this pointer has permission to deallocate this range.</p>\n</div></details><section id=\"method.expose_tag\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/mod.rs.html#92-94\">Source</a><h4 class=\"code-header\">pub fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.expose_tag\" class=\"fn\">expose_tag</a>(&amp;mut self, _tag: <a class=\"struct\" href=\"miri/borrow_tracker/struct.BorTag.html\" title=\"struct miri::borrow_tracker::BorTag\">BorTag</a>)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.release_protector\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/mod.rs.html#102-112\">Source</a><h4 class=\"code-header\">pub fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.release_protector\" class=\"fn\">release_protector</a>(\n    &amp;mut self,\n    machine: &amp;<a class=\"struct\" href=\"miri/machine/struct.MiriMachine.html\" title=\"struct miri::machine::MiriMachine\">MiriMachine</a>&lt;'tcx&gt;,\n    global: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/cell/struct.RefCell.html\" title=\"struct core::cell::RefCell\">RefCell</a>&lt;<a class=\"struct\" href=\"miri/borrow_tracker/struct.GlobalStateInner.html\" title=\"struct miri::borrow_tracker::GlobalStateInner\">GlobalStateInner</a>&gt;,\n    tag: <a class=\"struct\" href=\"miri/borrow_tracker/struct.BorTag.html\" title=\"struct miri::borrow_tracker::BorTag\">BorTag</a>,\n    alloc_id: <a class=\"struct\" href=\"rustc_middle/mir/interpret/struct.AllocId.html\" title=\"struct rustc_middle::mir::interpret::AllocId\">AllocId</a>,\n) -&gt; <a class=\"type\" href=\"rustc_middle/mir/interpret/error/type.InterpResult.html\" title=\"type rustc_middle::mir::interpret::error::InterpResult\">InterpResult</a>&lt;'tcx&gt;</h4></section></summary><div class=\"docblock\"><p>A tag just lost its protector.</p>\n<p>This emits a special kind of access that is only applied\nto initialized locations, as a protection against other\ntags not having been made aware of the existence of this\nprotector.</p>\n</div></details></div></details>",0,"miri::borrow_tracker::tree_borrows::AllocState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tree\" class=\"impl\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#548-586\">Source</a><a href=\"#impl-Tree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html\" title=\"struct miri::borrow_tracker::tree_borrows::tree::Tree\">Tree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#550-585\">Source</a><h4 class=\"code-header\">pub fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.new\" class=\"fn\">new</a>(root_tag: <a class=\"struct\" href=\"miri/borrow_tracker/struct.BorTag.html\" title=\"struct miri::borrow_tracker::BorTag\">BorTag</a>, size: <a class=\"struct\" href=\"rustc_abi/struct.Size.html\" title=\"struct rustc_abi::Size\">Size</a>, span: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new tree, with only a root pointer.</p>\n</div></details></div></details>",0,"miri::borrow_tracker::tree_borrows::AllocState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tree\" class=\"impl\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#588-856\">Source</a><a href=\"#impl-Tree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"struct\" href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html\" title=\"struct miri::borrow_tracker::tree_borrows::tree::Tree\">Tree</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_child\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#590-628\">Source</a><h4 class=\"code-header\">pub fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.new_child\" class=\"fn\">new_child</a>(\n    &amp;mut self,\n    parent_tag: <a class=\"struct\" href=\"miri/borrow_tracker/struct.BorTag.html\" title=\"struct miri::borrow_tracker::BorTag\">BorTag</a>,\n    new_tag: <a class=\"struct\" href=\"miri/borrow_tracker/struct.BorTag.html\" title=\"struct miri::borrow_tracker::BorTag\">BorTag</a>,\n    default_initial_perm: <a class=\"struct\" href=\"miri/borrow_tracker/tree_borrows/perms/struct.Permission.html\" title=\"struct miri::borrow_tracker::tree_borrows::perms::Permission\">Permission</a>,\n    reborrow_range: <a class=\"struct\" href=\"rustc_middle/mir/interpret/allocation/struct.AllocRange.html\" title=\"struct rustc_middle::mir::interpret::allocation::AllocRange\">AllocRange</a>,\n    span: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>,\n    prot: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"type\" href=\"rustc_middle/mir/interpret/error/type.InterpResult.html\" title=\"type rustc_middle::mir::interpret::error::InterpResult\">InterpResult</a>&lt;'tcx&gt;</h4></section></summary><div class=\"docblock\"><p>Insert a new tag in the tree</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_last_accessed_after_retag\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#632-668\">Source</a><h4 class=\"code-header\">fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.update_last_accessed_after_retag\" class=\"fn\">update_last_accessed_after_retag</a>(\n    &amp;mut self,\n    current: <a class=\"struct\" href=\"miri/borrow_tracker/tree_borrows/unimap/struct.UniIndex.html\" title=\"struct miri::borrow_tracker::tree_borrows::unimap::UniIndex\">UniIndex</a>,\n    strongest_allowed: <a class=\"enum\" href=\"miri/borrow_tracker/tree_borrows/foreign_access_skipping/enum.IdempotentForeignAccess.html\" title=\"enum miri::borrow_tracker::tree_borrows::foreign_access_skipping::IdempotentForeignAccess\">IdempotentForeignAccess</a>,\n)</h4></section></summary><div class=\"docblock\"><p>Restores the SIFA “children are stronger” invariant after a retag.\nSee <code>foreign_access_skipping</code> and <code>new_child</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dealloc\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#673-719\">Source</a><h4 class=\"code-header\">pub fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.dealloc\" class=\"fn\">dealloc</a>(\n    &amp;mut self,\n    tag: <a class=\"struct\" href=\"miri/borrow_tracker/struct.BorTag.html\" title=\"struct miri::borrow_tracker::BorTag\">BorTag</a>,\n    access_range: <a class=\"struct\" href=\"rustc_middle/mir/interpret/allocation/struct.AllocRange.html\" title=\"struct rustc_middle::mir::interpret::allocation::AllocRange\">AllocRange</a>,\n    global: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/cell/struct.RefCell.html\" title=\"struct core::cell::RefCell\">RefCell</a>&lt;<a class=\"struct\" href=\"miri/borrow_tracker/struct.GlobalStateInner.html\" title=\"struct miri::borrow_tracker::GlobalStateInner\">GlobalStateInner</a>&gt;,\n    alloc_id: <a class=\"struct\" href=\"rustc_middle/mir/interpret/struct.AllocId.html\" title=\"struct rustc_middle::mir::interpret::AllocId\">AllocId</a>,\n    span: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>,\n) -&gt; <a class=\"type\" href=\"rustc_middle/mir/interpret/error/type.InterpResult.html\" title=\"type rustc_middle::mir::interpret::error::InterpResult\">InterpResult</a>&lt;'tcx&gt;</h4></section></summary><div class=\"docblock\"><p>Deallocation requires</p>\n<ul>\n<li>a pointer that permits write accesses</li>\n<li>the absence of Strong Protectors anywhere in the allocation</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.perform_access\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#739-855\">Source</a><h4 class=\"code-header\">pub fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.perform_access\" class=\"fn\">perform_access</a>(\n    &amp;mut self,\n    tag: <a class=\"struct\" href=\"miri/borrow_tracker/struct.BorTag.html\" title=\"struct miri::borrow_tracker::BorTag\">BorTag</a>,\n    access_range_and_kind: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"struct\" href=\"rustc_middle/mir/interpret/allocation/struct.AllocRange.html\" title=\"struct rustc_middle::mir::interpret::allocation::AllocRange\">AllocRange</a>, <a class=\"enum\" href=\"miri/helpers/enum.AccessKind.html\" title=\"enum miri::helpers::AccessKind\">AccessKind</a>, <a class=\"enum\" href=\"miri/borrow_tracker/tree_borrows/diagnostics/enum.AccessCause.html\" title=\"enum miri::borrow_tracker::tree_borrows::diagnostics::AccessCause\">AccessCause</a>)&gt;,\n    global: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/cell/struct.RefCell.html\" title=\"struct core::cell::RefCell\">RefCell</a>&lt;<a class=\"struct\" href=\"miri/borrow_tracker/struct.GlobalStateInner.html\" title=\"struct miri::borrow_tracker::GlobalStateInner\">GlobalStateInner</a>&gt;,\n    alloc_id: <a class=\"struct\" href=\"rustc_middle/mir/interpret/struct.AllocId.html\" title=\"struct rustc_middle::mir::interpret::AllocId\">AllocId</a>,\n    span: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>,\n) -&gt; <a class=\"type\" href=\"rustc_middle/mir/interpret/error/type.InterpResult.html\" title=\"type rustc_middle::mir::interpret::error::InterpResult\">InterpResult</a>&lt;'tcx&gt;</h4></section></summary><div class=\"docblock\"><p>Map the per-node and per-location <code>LocationState::perform_access</code>\nto each location of the first component of <code>access_range_and_kind</code>,\non every tag of the allocation.</p>\n<p>If <code>access_range_and_kind</code> is <code>None</code>, this is interpreted as the special\naccess that is applied on protector release:</p>\n<ul>\n<li>the access will be applied only to initialized locations of the allocation,</li>\n<li>it will not be visible to children,</li>\n<li>it will be recorded as a <code>FnExit</code> diagnostic access</li>\n<li>and it will be a read except if the location is <code>Active</code>, i.e. has been written to,\nin which case it will be a write.</li>\n</ul>\n<p><code>LocationState::perform_access</code> will take care of raising transition\nerrors and updating the <code>initialized</code> status of each location,\nthis traversal adds to that:</p>\n<ul>\n<li>inserting into the map locations that do not exist yet,</li>\n<li>trimming the traversal,</li>\n<li>recording the history.</li>\n</ul>\n</div></details></div></details>",0,"miri::borrow_tracker::tree_borrows::AllocState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tree\" class=\"impl\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#859-1001\">Source</a><a href=\"#impl-Tree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html\" title=\"struct miri::borrow_tracker::tree_borrows::tree::Tree\">Tree</a></h3><div class=\"docblock\"><p>Integration with the BorTag garbage collector</p>\n</div></section></summary><div class=\"impl-items\"><section id=\"method.remove_unreachable_tags\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#860-867\">Source</a><h4 class=\"code-header\">pub fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.remove_unreachable_tags\" class=\"fn\">remove_unreachable_tags</a>(&amp;mut self, live_tags: &amp;FxHashSet&lt;<a class=\"struct\" href=\"miri/borrow_tracker/struct.BorTag.html\" title=\"struct miri::borrow_tracker::BorTag\">BorTag</a>&gt;)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_useless\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#871-874\">Source</a><h4 class=\"code-header\">fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.is_useless\" class=\"fn\">is_useless</a>(&amp;self, idx: <a class=\"struct\" href=\"miri/borrow_tracker/tree_borrows/unimap/struct.UniIndex.html\" title=\"struct miri::borrow_tracker::tree_borrows::unimap::UniIndex\">UniIndex</a>, live: &amp;FxHashSet&lt;<a class=\"struct\" href=\"miri/borrow_tracker/struct.BorTag.html\" title=\"struct miri::borrow_tracker::BorTag\">BorTag</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks if a node is useless and should be GC’ed.\nA node is useless if it has no children and also the tag is no longer live.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_be_replaced_by_single_child\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#879-911\">Source</a><h4 class=\"code-header\">fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.can_be_replaced_by_single_child\" class=\"fn\">can_be_replaced_by_single_child</a>(\n    &amp;self,\n    idx: <a class=\"struct\" href=\"miri/borrow_tracker/tree_borrows/unimap/struct.UniIndex.html\" title=\"struct miri::borrow_tracker::tree_borrows::unimap::UniIndex\">UniIndex</a>,\n    live: &amp;FxHashSet&lt;<a class=\"struct\" href=\"miri/borrow_tracker/struct.BorTag.html\" title=\"struct miri::borrow_tracker::BorTag\">BorTag</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"miri/borrow_tracker/tree_borrows/unimap/struct.UniIndex.html\" title=\"struct miri::borrow_tracker::tree_borrows::unimap::UniIndex\">UniIndex</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checks whether a node can be replaced by its only child.\nIf so, returns the index of said only child.\nIf not, returns none.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_useless_node\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#918-929\">Source</a><h4 class=\"code-header\">fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.remove_useless_node\" class=\"fn\">remove_useless_node</a>(&amp;mut self, this: <a class=\"struct\" href=\"miri/borrow_tracker/tree_borrows/unimap/struct.UniIndex.html\" title=\"struct miri::borrow_tracker::tree_borrows::unimap::UniIndex\">UniIndex</a>)</h4></section></summary><div class=\"docblock\"><p>Properly removes a node.\nThe node to be removed should not otherwise be usable. It also\nshould have no children, but this is not checked, so that nodes\nwhose children were rotated somewhere else can be deleted without\nhaving to first modify them to clear that array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_useless_children\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#944-1000\">Source</a><h4 class=\"code-header\">fn <a href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html#tymethod.remove_useless_children\" class=\"fn\">remove_useless_children</a>(&amp;mut self, root: <a class=\"struct\" href=\"miri/borrow_tracker/tree_borrows/unimap/struct.UniIndex.html\" title=\"struct miri::borrow_tracker::tree_borrows::unimap::UniIndex\">UniIndex</a>, live: &amp;FxHashSet&lt;<a class=\"struct\" href=\"miri/borrow_tracker/struct.BorTag.html\" title=\"struct miri::borrow_tracker::BorTag\">BorTag</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Traverses the entire tree looking for useless tags.\nRemoves from the tree all useless child nodes of root.\nIt will not delete the root itself.</p>\n<p>NOTE: This leaves in the middle of the tree tags that are unreachable but have\nreachable children. There is a potential for compacting the tree by reassigning\nchildren of dead tags to the nearest live parent, but it must be done with care\nnot to remove UB.</p>\n<p>Example: Consider the tree <code>root - parent - child</code>, with <code>parent: Frozen</code> and\n<code>child: Reserved</code>. This tree can exist. If we blindly delete <code>parent</code> and reassign\n<code>child</code> to be a direct child of <code>root</code> then Writes to <code>child</code> are now permitted\nwhereas they were not when <code>parent</code> was still there.</p>\n</div></details></div></details>",0,"miri::borrow_tracker::tree_borrows::AllocState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VisitProvenance-for-Tree\" class=\"impl\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#1012-1018\">Source</a><a href=\"#impl-VisitProvenance-for-Tree\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"miri/provenance_gc/trait.VisitProvenance.html\" title=\"trait miri::provenance_gc::VisitProvenance\">VisitProvenance</a> for <a class=\"struct\" href=\"miri/borrow_tracker/tree_borrows/tree/struct.Tree.html\" title=\"struct miri::borrow_tracker::tree_borrows::tree::Tree\">Tree</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.visit_provenance\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/miri/borrow_tracker/tree_borrows/tree.rs.html#1013-1017\">Source</a><a href=\"#method.visit_provenance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"miri/provenance_gc/trait.VisitProvenance.html#tymethod.visit_provenance\" class=\"fn\">visit_provenance</a>(&amp;self, visit: &amp;mut <a class=\"type\" href=\"miri/provenance_gc/type.VisitWith.html\" title=\"type miri::provenance_gc::VisitWith\">VisitWith</a>&lt;'_&gt;)</h4></section></div></details>","VisitProvenance","miri::borrow_tracker::tree_borrows::AllocState"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[32800]}