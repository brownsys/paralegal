(function() {
    var type_impls = Object.fromEntries([["miri",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-VClockAlloc\" class=\"impl\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#940\">Source</a><a href=\"#impl-Clone-for-VClockAlloc\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"miri/concurrency/data_race/struct.VClockAlloc.html\" title=\"struct miri::concurrency::data_race::VClockAlloc\">VClockAlloc</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#940\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"miri/concurrency/data_race/struct.VClockAlloc.html\" title=\"struct miri::concurrency::data_race::VClockAlloc\">VClockAlloc</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","miri::concurrency::data_race::AllocState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-VClockAlloc\" class=\"impl\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#940\">Source</a><a href=\"#impl-Debug-for-VClockAlloc\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"miri/concurrency/data_race/struct.VClockAlloc.html\" title=\"struct miri::concurrency::data_race::VClockAlloc\">VClockAlloc</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#940\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","miri::concurrency::data_race::AllocState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VClockAlloc\" class=\"impl\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#952-1203\">Source</a><a href=\"#impl-VClockAlloc\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"miri/concurrency/data_race/struct.VClockAlloc.html\" title=\"struct miri::concurrency::data_race::VClockAlloc\">VClockAlloc</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_allocation\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#954-996\">Source</a><h4 class=\"code-header\">pub fn <a href=\"miri/concurrency/data_race/struct.VClockAlloc.html#tymethod.new_allocation\" class=\"fn\">new_allocation</a>(\n    global: &amp;<a class=\"struct\" href=\"miri/concurrency/data_race/struct.GlobalState.html\" title=\"struct miri::concurrency::data_race::GlobalState\">GlobalState</a>,\n    thread_mgr: &amp;<a class=\"struct\" href=\"miri/concurrency/thread/struct.ThreadManager.html\" title=\"struct miri::concurrency::thread::ThreadManager\">ThreadManager</a>&lt;'_&gt;,\n    len: <a class=\"struct\" href=\"rustc_abi/struct.Size.html\" title=\"struct rustc_abi::Size\">Size</a>,\n    kind: <a class=\"type\" href=\"miri/machine/type.MemoryKind.html\" title=\"type miri::machine::MemoryKind\">MemoryKind</a>,\n    current_span: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>,\n) -&gt; <a class=\"struct\" href=\"miri/concurrency/data_race/struct.VClockAlloc.html\" title=\"struct miri::concurrency::data_race::VClockAlloc\">VClockAlloc</a></h4></section></summary><div class=\"docblock\"><p>Create a new data-race detector for newly allocated memory.</p>\n</div></details><section id=\"method.find_gt_index\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#1000-1027\">Source</a><h4 class=\"code-header\">fn <a href=\"miri/concurrency/data_race/struct.VClockAlloc.html#tymethod.find_gt_index\" class=\"fn\">find_gt_index</a>(l: &amp;<a class=\"struct\" href=\"miri/concurrency/vector_clock/struct.VClock.html\" title=\"struct miri::concurrency::vector_clock::VClock\">VClock</a>, r: &amp;<a class=\"struct\" href=\"miri/concurrency/vector_clock/struct.VClock.html\" title=\"struct miri::concurrency::vector_clock::VClock\">VClock</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"miri/concurrency/vector_clock/struct.VectorIdx.html\" title=\"struct miri::concurrency::vector_clock::VectorIdx\">VectorIdx</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_data_race\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#1037-1118\">Source</a><h4 class=\"code-header\">fn <a href=\"miri/concurrency/data_race/struct.VClockAlloc.html#tymethod.report_data_race\" class=\"fn\">report_data_race</a>&lt;'tcx&gt;(\n    global: &amp;<a class=\"struct\" href=\"miri/concurrency/data_race/struct.GlobalState.html\" title=\"struct miri::concurrency::data_race::GlobalState\">GlobalState</a>,\n    thread_mgr: &amp;<a class=\"struct\" href=\"miri/concurrency/thread/struct.ThreadManager.html\" title=\"struct miri::concurrency::thread::ThreadManager\">ThreadManager</a>&lt;'_&gt;,\n    mem_clocks: &amp;<a class=\"struct\" href=\"miri/concurrency/data_race/struct.MemoryCellClocks.html\" title=\"struct miri::concurrency::data_race::MemoryCellClocks\">MemoryCellClocks</a>,\n    access: <a class=\"enum\" href=\"miri/concurrency/data_race/enum.AccessType.html\" title=\"enum miri::concurrency::data_race::AccessType\">AccessType</a>,\n    access_size: <a class=\"struct\" href=\"rustc_abi/struct.Size.html\" title=\"struct rustc_abi::Size\">Size</a>,\n    ptr_dbg: <a class=\"struct\" href=\"rustc_middle/mir/interpret/pointer/struct.Pointer.html\" title=\"struct rustc_middle::mir::interpret::pointer::Pointer\">Pointer</a>&lt;<a class=\"struct\" href=\"rustc_middle/mir/interpret/struct.AllocId.html\" title=\"struct rustc_middle::mir::interpret::AllocId\">AllocId</a>&gt;,\n    ty: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.Ty.html\" title=\"struct rustc_middle::ty::Ty\">Ty</a>&lt;'_&gt;&gt;,\n) -&gt; <a class=\"type\" href=\"rustc_middle/mir/interpret/error/type.InterpResult.html\" title=\"type rustc_middle::mir::interpret::error::InterpResult\">InterpResult</a>&lt;'tcx&gt;</h4></section></summary><div class=\"docblock\"><p>Report a data-race found in the program.\nThis finds the two racing threads and the type\nof data-race that occurred. This will also\nreturn info about the memory location the data-race\noccurred in. The <code>ty</code> parameter is used for diagnostics, letting\nthe user know which type was involved in the access.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#1126-1161\">Source</a><h4 class=\"code-header\">pub fn <a href=\"miri/concurrency/data_race/struct.VClockAlloc.html#tymethod.read\" class=\"fn\">read</a>&lt;'tcx&gt;(\n    &amp;self,\n    alloc_id: <a class=\"struct\" href=\"rustc_middle/mir/interpret/struct.AllocId.html\" title=\"struct rustc_middle::mir::interpret::AllocId\">AllocId</a>,\n    access_range: <a class=\"struct\" href=\"rustc_middle/mir/interpret/allocation/struct.AllocRange.html\" title=\"struct rustc_middle::mir::interpret::allocation::AllocRange\">AllocRange</a>,\n    read_type: <a class=\"enum\" href=\"miri/concurrency/data_race/enum.NaReadType.html\" title=\"enum miri::concurrency::data_race::NaReadType\">NaReadType</a>,\n    ty: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.Ty.html\" title=\"struct rustc_middle::ty::Ty\">Ty</a>&lt;'_&gt;&gt;,\n    machine: &amp;<a class=\"struct\" href=\"miri/machine/struct.MiriMachine.html\" title=\"struct miri::machine::MiriMachine\">MiriMachine</a>&lt;'_&gt;,\n) -&gt; <a class=\"type\" href=\"rustc_middle/mir/interpret/error/type.InterpResult.html\" title=\"type rustc_middle::mir::interpret::error::InterpResult\">InterpResult</a>&lt;'tcx&gt;</h4></section></summary><div class=\"docblock\"><p>Detect data-races for an unsynchronized read operation. It will not perform\ndata-race detection if <code>race_detecting()</code> is false, either due to no threads\nbeing created or if it is temporarily disabled during a racy read or write\noperation for which data-race detection is handled separately, for example\natomic read operations. The <code>ty</code> parameter is used for diagnostics, letting\nthe user know which type was read.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#1168-1202\">Source</a><h4 class=\"code-header\">pub fn <a href=\"miri/concurrency/data_race/struct.VClockAlloc.html#tymethod.write\" class=\"fn\">write</a>&lt;'tcx&gt;(\n    &amp;mut self,\n    alloc_id: <a class=\"struct\" href=\"rustc_middle/mir/interpret/struct.AllocId.html\" title=\"struct rustc_middle::mir::interpret::AllocId\">AllocId</a>,\n    access_range: <a class=\"struct\" href=\"rustc_middle/mir/interpret/allocation/struct.AllocRange.html\" title=\"struct rustc_middle::mir::interpret::allocation::AllocRange\">AllocRange</a>,\n    write_type: <a class=\"enum\" href=\"miri/concurrency/data_race/enum.NaWriteType.html\" title=\"enum miri::concurrency::data_race::NaWriteType\">NaWriteType</a>,\n    ty: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.Ty.html\" title=\"struct rustc_middle::ty::Ty\">Ty</a>&lt;'_&gt;&gt;,\n    machine: &amp;mut <a class=\"struct\" href=\"miri/machine/struct.MiriMachine.html\" title=\"struct miri::machine::MiriMachine\">MiriMachine</a>&lt;'_&gt;,\n) -&gt; <a class=\"type\" href=\"rustc_middle/mir/interpret/error/type.InterpResult.html\" title=\"type rustc_middle::mir::interpret::error::InterpResult\">InterpResult</a>&lt;'tcx&gt;</h4></section></summary><div class=\"docblock\"><p>Detect data-races for an unsynchronized write operation. It will not perform\ndata-race detection if <code>race_detecting()</code> is false, either due to no threads\nbeing created or if it is temporarily disabled during a racy read or write\noperation. The <code>ty</code> parameter is used for diagnostics, letting\nthe user know which type was written.</p>\n</div></details></div></details>",0,"miri::concurrency::data_race::AllocState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VisitProvenance-for-VClockAlloc\" class=\"impl\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#946-950\">Source</a><a href=\"#impl-VisitProvenance-for-VClockAlloc\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"miri/provenance_gc/trait.VisitProvenance.html\" title=\"trait miri::provenance_gc::VisitProvenance\">VisitProvenance</a> for <a class=\"struct\" href=\"miri/concurrency/data_race/struct.VClockAlloc.html\" title=\"struct miri::concurrency::data_race::VClockAlloc\">VClockAlloc</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.visit_provenance\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#947-949\">Source</a><a href=\"#method.visit_provenance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"miri/provenance_gc/trait.VisitProvenance.html#tymethod.visit_provenance\" class=\"fn\">visit_provenance</a>(&amp;self, _visit: &amp;mut <a class=\"type\" href=\"miri/provenance_gc/type.VisitWith.html\" title=\"type miri::provenance_gc::VisitWith\">VisitWith</a>&lt;'_&gt;)</h4></section></div></details>","VisitProvenance","miri::concurrency::data_race::AllocState"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[14363]}